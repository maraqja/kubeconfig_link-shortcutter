# Похож на секреты, но его можно подкладывать внутрь пода (примонитровать в контейнер)
# Используется для прокидывания конфигурации (для всего, что конфигурируется не env-ами, а конфиг файлами) внутрь пода

apiVersion: v1
kind: ConfigMap
metadata:
  name: demo-config
  labels: # include использовать в случае если нужно вставлять шаблон в разные места и в этих местах должны быть разные отступы (которые указывать через indent)
  {{- include "chart.labels" . | nindent 4}} # Обязательно передаем контекст, который доступен внутри template
data:
  name: {{ .Values.app.version | toString | upper | quote }}
  
   {{- include "chart.labels" . | nindent 2}} # Обязательно передаем контекст, который доступен внутри template



  # # if-else
  {{- if eq .Values.env "production"}}
  paymentToken: "1234"
  {{- else }}
  paymentToken: false
  {{- end }} # добавляем - чтобы не было пустых строк в итоговом манифесте



  # # with
  # memory: {{ .Values.value.requirements.limits.memory }}
  # cpu: {{ .Values.value.requirements.limits.cpu }}
  # # С помощью with даем указание искать значения в определенном свойстве
  {{- with .Values.value.requirements.limits }}
  memory: {{ .memory }}
  cpu: {{ .cpu }}
  version: {{ $.Values.app.version }} # Если нужно обратиться к самому корню в блоке with
  {{- end }}



  # # range
  users:
    # {{- range $index, $user := .Values.users}} # указываем по какому массиву итерируемся 
    # - {{  $user.name }}: "[{{ $index }}] {{ $user.role }}" # чтобы обратиться к элементу на текущей итерации используется . (или переменные)
    # {{- end }}

    {{- range tuple "Dima" "Vasya" "Kaka"}}
    - {{ . }}
    {{- end}}




# # переменные  
  {{- $map := .Release.Name | upper | quote }}
  map: {{ $map }}
